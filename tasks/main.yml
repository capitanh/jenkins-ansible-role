---
- name: Install required packages
  yum:
    name: "{{item}}"
    state: present
  with_items:
  - git
  - unzip

- include_tasks: maven.yml
- include_tasks: gradle.yml

- name: Add jenkins repo
  yum_repository:
    name: Jenkins-stable
    description: Jenkins-stable
    baseurl: http://pkg.jenkins.io/redhat-stable
    gpgcheck: no

- name: Install jenkins package
  yum:
    name: jenkins
    state: present

- name: Copy config template
  template:
    src: jenkins
    dest: /etc/sysconfig
    owner: root
    group: root
    mode: 0600

- name: Copy service template
  template:
    src: jenkins.service
    dest: /usr/lib/systemd/system/systemd-jenkins.service
    owner: root
    group: root
    mode: 0644

- name: Create symlink to service script
  file:
    src: /usr/lib/systemd/system/systemd-jenkins.service
    dest: /etc/systemd/system/multi-user.target.wants/jenkins.service
    owner: root
    group: root
    mode: 0755
    state: link

- name: Create admin user directory
  file:
    path: "{{jenkins_home}}/users/admin"
    state: directory
    recurse: yes
    owner: "{{jenkins_user}}"
    group: "{{jenkins_user}}"

- name: Create secrets directory
  file:
    path: "{{jenkins_home}}/secrets"
    state: directory
    recurse: yes
    owner: "{{jenkins_user}}"
    group: "{{jenkins_user}}"

- name: Copy admin user template
  template:
    src: admin-config.xml
    dest: "{{jenkins_home}}/users/admin/config.xml"
    owner: "{{jenkins_user}}"
    group: "{{jenkins_user}}"
    mode: 0644

- name: Copy config files
  copy:
    src: "{{item}}"
    dest: "{{jenkins_home}}"
    owner: "{{jenkins_user}}"
    group: "{{jenkins_user}}"
    mode: 0644
  with_items:
    - jenkins.CLI.xml
    - slave-to-master-security-kill-switch

- name: Copy config templates
  template:
    src: "{{item}}"
    dest: "{{jenkins_home}}"
    owner: "{{jenkins_user}}"
    group: "{{jenkins_user}}"
    mode: 0644
  with_items:
    - config.xml
    - hudson.tasks.Maven.xml
    - hudson.plugins.gradle.Gradle.xml

- name: Start service
  service:
    name: jenkins
    state: restarted

#- name: Wait for jenkins restart
#  wait_for:
#    port: "{{jenkins_port}}"

#- name: Wait untils Jenkins web API is available
#  #shell: "curl --silent -o /dev/null -w '%{http_code}' http://localhost:{{jenkins_port}}/cli"
#  shell: curl --head --silent http://localhost:8080/cli/
#  register: result
#  until: result.stdout.find("200 OK") != -1
#  retries: 20
#  delay: 2

- name: Wait untils Jenkins web API is available
  uri:
    url: "http://localhost:{{jenkins_port}}/cli"
    register: status
    until: status == 200
    retries: 20
    delay: 2

- name: Install plugins
  jenkins_plugin:
    params: "{{jenkins_params}}"
    name: "{{item}}"
    state: present
    with_dependencies: yes
  with_items: "{{jenkins_plugins}}"

- name: Start service
  service:
    name: jenkins
    state: restarted

